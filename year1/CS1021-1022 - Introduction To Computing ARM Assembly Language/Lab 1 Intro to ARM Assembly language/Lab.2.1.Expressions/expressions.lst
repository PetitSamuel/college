


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Expressions, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000         ;First expression 
    7 00000000 E3A01002        LDR              R1, =2      ; x = 2
    8 00000004 E3A03003        LDR              R3, =3      ; tmp = 3
    9 00000008         
   10 00000008 E0000191        MUL              R0, R1, R1  ; result = x * x
   11 0000000C E0000093        MUL              R0, R3, R0  ; result = 3x * x
   12 00000010         
   13 00000010 E3A03005        LDR              R3, =5      ; tmp = 5
   14 00000014         
   15 00000014 E0030391        MUL              R3, R1, R3  ; tmp = 5x
   16 00000018 E0800003        ADD              R0, R0, R3  ; result = 3x * x =
                                                             5x 
   17 0000001C         
   18 0000001C         
   19 0000001C         
   20 0000001C         ;second expression
   21 0000001C E3A01001        LDR              R1, =1      ; x = 1
   22 00000020 E3A02002        LDR              R2, =2      ; y = 2
   23 00000024 E3A03006        LDR              R3, =6      ; tmp = 6
   24 00000028         
   25 00000028 E0000291        MUL              R0, R1, R2  ; result = x * y
   26 0000002C E0000093        MUL              R0, R3, R0  ; result = 6 * x * 
                                                            y
   27 00000030 E3A03002        LDR              R3, =2      ; tmp = 2
   28 00000034 E0040191        MUL              R4, R1, R1  ; tmp2 = x * x
   29 00000038 E0030394        MUL              R3, R4, R3  ; tmp = 2 * x * x
   30 0000003C E0800003        ADD              R0, R0, R3  ; result = 6xy + 2 
                                                            x * x
   31 00000040         
   32 00000040 E3A03003        LDR              R3, =3      ; tmp = 3
   33 00000044 E0040292        MUL              R4, R2, R2  ; tmp2 = y * y
   34 00000048 E0030394        MUL              R3, R4, R3  ; tmp = 3 * y * y
   35 0000004C         
   36 0000004C E0800003        ADD              R0, R0, R3  ; result = 2 * x * 
                                                            x + 6xy + 3 * y * y
                                                            
   37 00000050         
   38 00000050         ; third expression
   39 00000050 E3A01001        LDR              R1, = 1     ; x = 1
   40 00000054         
   41 00000054 E0000191        MUL              R0, R1, R1  ; result = x * x
   42 00000058 E0000091        MUL              R0, R1, R0  ; result = x *x * x
                                                            
   43 0000005C E0030191        MUL              R3, R1, R1  ; result = x * x
   44 00000060         
   45 00000060 E3A04004        LDR              R4, =4      ; tmp = 4
   46 00000064         
   47 00000064 E0030394        MUL              R3, R4, R3  ; result = 4 * x * 
                                                            x
   48 00000068 E0400003        SUB              R0, R0, R3  ; result = x * x * 
                                                            x - 4 * x * x
   49 0000006C         
   50 0000006C E3A03003        LDR              R3, =3      ; tmp = 3
   51 00000070         



ARM Macro Assembler    Page 2 


   52 00000070 E0030391        MUL              R3, R1, R3  ; tmp = 3 * x
   53 00000074 E0800003        ADD              R0, R0, R3  ; result = x * x * 
                                                            x - 4 * x * x + 3 *
                                                             x
   54 00000078         
   55 00000078 E3A03008        LDR              R3, = 8     ; tmp = 8
   56 0000007C E0800003        ADD              R0, R0, R3  ; result = x * x * 
                                                            x - 4 * x * x + 3 *
                                                             x + 8
   57 00000080         
   58 00000080         
   59 00000080         
   60 00000080         
   61 00000080 EAFFFFFE 
                       stop    B                stop
   62 00000084         
   63 00000084         END
                       
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\e
xpressions.d -o.\expressions.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS
\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="
__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 516" --predefine="NO_CLO
CK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA
 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\expressio
ns.lst Expressions.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

END 00000084

Symbol: END
   Definitions
      At line 63 in file Expressions.s
   Uses
      None
Comment: END unused
Expressions 00000000

Symbol: Expressions
   Definitions
      At line 1 in file Expressions.s
   Uses
      None
Comment: Expressions unused
start 00000000

Symbol: start
   Definitions
      At line 5 in file Expressions.s
   Uses
      At line 3 in file Expressions.s
Comment: start used once
stop 00000080

Symbol: stop
   Definitions
      At line 61 in file Expressions.s
   Uses
      At line 61 in file Expressions.s
Comment: stop used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Expressions.s
   Uses
      None
Comment: main unused
1 symbol
343 symbols in table
