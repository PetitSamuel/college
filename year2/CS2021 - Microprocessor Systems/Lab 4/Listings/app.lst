


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         ; Timer Stuff -- UM, Table 173
    3 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008  ; pins needed are P
                                                            0.17, P0.18 and P0.
                                                            21
    4 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
    5 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
    6 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    7 00000000 E0008000 
                       T1      equ              0xE0008000
    8 00000000         
    9 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
   10 00000000 00000004 
                       TCR     equ              4
   11 00000000 00000014 
                       MCR     equ              0x14
   12 00000000 00000018 
                       MR0     equ              0x18
   13 00000000         
   14 00000000 00000002 
                       TimerCommandReset
                               equ              2
   15 00000000 00000001 
                       TimerCommandRun
                               equ              1
   16 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   17 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   18 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   19 00000000         
   20 00000000         ; VIC Stuff -- UM, Table 41
   21 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   22 00000000 00000010 
                       IntEnable
                               equ              0x10
   23 00000000 00000030 
                       VectAddr
                               equ              0x30
   24 00000000 00000100 
                       VectAddr0
                               equ              0x100
   25 00000000 00000200 
                       VectCtrl0



ARM Macro Assembler    Page 2 


                               equ              0x200
   26 00000000         
   27 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   28 00000000 00000010 
                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   29 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   30 00000000         
   31 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   32 00000000                 IMPORT           main
   33 00000000         
   34 00000000         ; (c) Mike Brady, 2014 -- 2019.
   35 00000000         
   36 00000000                 EXPORT           start
   37 00000000         start
   38 00000000         ; initialisation code
   39 00000000         
   40 00000000         ; Initialise the VIC
   41 00000000 E59F00D0        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   42 00000004         
   43 00000004 E59F10D0        ldr              r1,=irqhan
   44 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   45 0000000C         
   46 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   47 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   48 00000014         
   49 00000014 E3A01010        mov              r1,#Timer0Mask
   50 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   51 0000001C         
   52 0000001C E3A01000        mov              r1,#0
   53 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   54 00000024         
   55 00000024         ; Initialise Timer 0
   56 00000024 E59F00B4        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   57 00000028         
   58 00000028 E3A01002        mov              r1,#TimerCommandReset
   59 0000002C E5801004        str              r1,[r0,#TCR]
   60 00000030         
   61 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts



ARM Macro Assembler    Page 3 


   62 00000034 E5801000        str              r1,[r0,#IR]
   63 00000038         
   64 00000038 E59F10A4        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   65 0000003C E5801018        str              r1,[r0,#MR0]
   66 00000040         
   67 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   68 00000044 E5801014        str              r1,[r0,#MCR]
   69 00000048         
   70 00000048 E3A01001        mov              r1,#TimerCommandRun
   71 0000004C E5801004        str              r1,[r0,#TCR]
   72 00000050 E59F1090        ldr              r1,=IO0DIR
   73 00000054 E3A02826        ldr              r2,=0x00260000 ;select select 1
                                                            7, 18, 21
   74 00000058 E5812000        str              r2,[r1]     ;make them outputs
   75 0000005C E59F1088        ldr              r1,=IO0SET
   76 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   77 00000064 E59F2084        ldr              r2,=IO0CLR
   78 00000068 E3A05000        MOV              R5, #0      ;boolean has R4 rea
                                                            ched 200
   79 0000006C E3A04000        MOV              R4, #0      ;count to 200
   80 00000070         
   81 00000070         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   82 00000070 E3A03802        ldr              r3,=0x00020000 
                                                            ; start with P0.17
   83 00000074 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
   84 00000078         wloop
   85 00000078 E3550001        CMP              R5, #1
   86 0000007C 1A000014        BNE              loopWait
   87 00000080 E3530802        CMP              R3, #0x00020000
   88 00000084 1A000005        BNE              change2
   89 00000088 E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
   90 0000008C E1A03083        mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit.
   91 00000090 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
   92 00000094 E3A05000        MOV              R5, #0
   93 00000098 E3A04000        MOV              R4, #0
   94 0000009C EA00000C        B                loopWait
   95 000000A0         change2
   96 000000A0 E3530701        CMP              R3, #0x00040000
   97 000000A4 1A000005        BNE              change3
   98 000000A8 E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
   99 000000AC E1A03183        mov              r3,r3,lsl #3 ;shift up to next 
                                                            bit.
  100 000000B0 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
  101 000000B4 E3A05000        MOV              R5, #0
  102 000000B8 E3A04000        MOV              R4, #0
  103 000000BC EA000004        B                loopWait
  104 000000C0         change3
  105 000000C0 E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
  106 000000C4 E1A03223        mov              r3,r3,lsr #4 ;shift up to next 



ARM Macro Assembler    Page 4 


                                                            bit.
  107 000000C8 E5823000        str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
  108 000000CC E3A05000        MOV              R5, #0
  109 000000D0 E3A04000        MOV              R4, #0
  110 000000D4         loopWait
  111 000000D4         
  112 000000D4 EAFFFFE7        B                wloop       ; branch always
  113 000000D8         ;main program execution will never drop below the statem
                       ent above.
  114 000000D8         
  115 000000D8 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028008 
              E0028004 
              E002800C         AREA             InterruptStuff, CODE, READONLY
  116 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  117 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  118 00000008         ;this is the body of the interrupt handler
  119 00000008 E2844001        ADD              R4, R4, #1
  120 0000000C E35400C8        CMP              R4, #200
  121 00000010 1A000000        BNE              return
  122 00000014 E3A05001        MOV              R5, #1
  123 00000018         return
  124 00000018         ;here you'd put the unique part of your interrupt handle
                       r
  125 00000018         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  126 00000018         
  127 00000018         
  128 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  129 00000018         ;i.e. we 'acknowledge' the interrupt
  130 00000018 E59F0014        ldr              r0,=T0
  131 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  132 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  133 00000024         
  134 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  135 00000024 E59F000C        ldr              r0,=VIC
  136 00000028 E3A01000        mov              r1,#0
  137 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  138 00000030         
  139 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  140 00000034         ; and also restoring the CPSR
  141 00000034         
  142 00000034                 END
              E0004000 
              FFFFF000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a



ARM Macro Assembler    Page 5 


pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VE
RSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 31 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
change2 000000A0

Symbol: change2
   Definitions
      At line 95 in file App.s
   Uses
      At line 88 in file App.s
Comment: change2 used once
change3 000000C0

Symbol: change3
   Definitions
      At line 104 in file App.s
   Uses
      At line 97 in file App.s
Comment: change3 used once
loopWait 000000D4

Symbol: loopWait
   Definitions
      At line 110 in file App.s
   Uses
      At line 86 in file App.s
      At line 94 in file App.s
      At line 103 in file App.s

start 00000000

Symbol: start
   Definitions
      At line 37 in file App.s
   Uses
      At line 36 in file App.s
Comment: start used once
wloop 00000078

Symbol: wloop
   Definitions
      At line 84 in file App.s
   Uses
      At line 112 in file App.s
Comment: wloop used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 115 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 116 in file App.s
   Uses
      At line 43 in file App.s
Comment: irqhan used once
return 00000018

Symbol: return
   Definitions
      At line 123 in file App.s
   Uses
      At line 121 in file App.s
Comment: return used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 5 in file App.s
   Uses
      At line 77 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 3 in file App.s
   Uses
      At line 72 in file App.s
Comment: IO0DIR used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 4 in file App.s
   Uses
      At line 75 in file App.s
Comment: IO0SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 9 in file App.s
   Uses
      At line 62 in file App.s
      At line 132 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 29 in file App.s
   Uses
      At line 46 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 22 in file App.s
   Uses
      At line 50 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 11 in file App.s
   Uses
      At line 68 in file App.s
Comment: MCR used once
MR0 00000018




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MR0
   Definitions
      At line 12 in file App.s
   Uses
      At line 65 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 6 in file App.s
   Uses
      At line 56 in file App.s
      At line 130 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 7 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 59 in file App.s
      At line 71 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 27 in file App.s
   Uses
      At line 28 in file App.s
      At line 46 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 28 in file App.s
   Uses
      At line 49 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 14 in file App.s
   Uses
      At line 58 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandRun
   Definitions
      At line 15 in file App.s
   Uses
      At line 70 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 67 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 18 in file App.s
   Uses
      At line 61 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 17 in file App.s
   Uses
      At line 131 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 21 in file App.s
   Uses
      At line 41 in file App.s
      At line 135 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 23 in file App.s
   Uses
      At line 53 in file App.s
      At line 137 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 24 in file App.s
   Uses
      At line 44 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 25 in file App.s
   Uses
      At line 47 in file App.s
Comment: VectCtrl0 used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 32 in file App.s
   Uses
      None
Comment: main unused
1 symbol
368 symbols in table
